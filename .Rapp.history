test <- randomlyAddTaxa(mast, groupsDF, branch.position="midpoint",#
 	ini.lambda=1, ini.mu=0.1, no.trees=1,#
 	clade.membership=namedClades, crown.can.move=FALSE)
document()
test2 <- randomlyAddTaxa(mast, groupsDF, branch.position="midpoint",#
 	ini.lambda=1, ini.mu=0.1, no.trees=1,#
 	clade.membership=namedClades, crown.can.move=FALSE)
getwd()
document()
test2 <- randomlyAddTaxa(mast, groupsDF, branch.position="midpoint",#
 	ini.lambda=1, ini.mu=0.1, no.trees=1,#
 	clade.membership=namedClades, crown.can.move=FALSE)
document()
randomlyAddTaxa
test2 <- randomlyAddTaxa(mast, groupsDF, branch.position="midpoint",#
 	ini.lambda=1, ini.mu=0.1, no.trees=1,#
 	clade.membership=namedClades, crown.can.move=FALSE)
tree <- readRDS("treeHere.RDS")
tree
clades
clades <- readRDS("cladeHere.RDS")
head(cladeHere)
head(clades)
tail(clades)
getMRCAs(tree, clades)
document()
getMRCAs(tree, clades)
getMRCAs(tree, clades)
#load the tree and groupings files#
groupsDF <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/hak_groupings_all.csv")#
mast <- read.tree("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/mast.tre")#
namedClades <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/namedClades.csv")
ls()
rm(list=ls())
document()
document()
#load the tree and groupings files#
groupsDF <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/hak_groupings_all.csv")#
mast <- read.tree("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/mast.tre")#
namedClades <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/namedClades.csv")
test2 <- randomlyAddTaxa(mast, groupsDF, branch.position="midpoint",#
 	ini.lambda=1, ini.mu=0.1, no.trees=1,#
 	clade.membership=namedClades, crown.can.move=FALSE)
test2
quickResults <- divRateSensitivity(mast, groupsDF, branch.position="midpoint",#
	ini.lambda=1, ini.mu=0.1, no.trees=3,#
	clade.membership=namedClades, crown.can.move=FALSE, calc.from.crown=TRUE, #
	epsilon=0.1)
quickResults
quickResults <- divRateSensitivity(mast, groupsDF, branch.position="midpoint",#
	ini.lambda=1, ini.mu=0.1, no.trees=3,#
	clade.membership=namedClades, crown.can.move=TRUE, calc.from.crown=TRUE, #
	epsilon=0.1)
quickResults
quickResults <- divRateSensitivity(mast, groupsDF, branch.position="midpoint",#
	ini.lambda=1, ini.mu=0.1, no.trees=3,#
	clade.membership=namedClades, crown.can.move=TRUE, calc.from.crown=TRUE, #
	epsilon=0)
quickResults
test2
test2[[2]]
head(test2[[2]])
head(test2[[2]][[1]])
test2[[2]][[1]][test2[[2]][[1]]$clade=="clade5"]
test2[[2]][[1]][test2[[2]][[1]]$clade=="clade5",]
test2[[2]][[1]][test2[[2]][[1]]$clade=="clade8",]
test2[[1]][[1]]
write.tree(test2[[1]][[1]], "test.tre")
mrcas <- unlist(getMRCAs(test2[[1]][[1]], test2[[2]][[1]]))
mrcas
allDesc <- lapply(mrcas, function(x)#
					geiger:::.get.descendants.of.node(node=x, phy=test2[[1]][[1]]))
allDesc
is.null(allDesc)
lapply(allDesc, is.null)
allDesc
anyMatches <- lapply(allDesc, function(x) x[x==526])
anyMatches
names(unlist(anyMatches))
geiger:::.get.descendants.of.node(node=526, phy=test2[[1]][[1]])
geiger:::.get.descendants.of.node(node=526, phy=test2[[1]][[1]], tips=TRUE)
geiger:::.get.descendants.of.node(node=509, phy=test2[[1]][[1]], tips=TRUE)
mrcas
geiger:::.get.descendants.of.node(node= 1036, phy=test2[[1]][[1]], tips=TRUE)
geiger:::.get.descendants.of.node(node= 1036, phy=test2[[1]][[1]])
geiger:::.get.descendants.of.node(node= 1036, phy=test2[[1]][[1]], tips=FALSE)
geiger:::.get.descendants.of.node(node=526, phy=test2[[1]][[1]], tips=FALSE)
anyMatches
anyMatches[lapply(anyMatches, is.null)]
anyMatches[[lapply(anyMatches, is.null)]]
mrcas
unlist(anyMatches)
anyMatches
allDesc
mrcas[!is.na(allDesc)]
allDesc[!is.na(allDesc)]
allDesc[is.null(allDesc)]
allDesc[is.null(allDesc),]
is.null(allDesc)
allDesc[c(TRUE,FALSE,TRUE,FALSE,TRUE,FALSE,TRUE,FALSE)]
lapply(allDesc, is.null)
allDesc[lapply(allDesc, is.null)]
allDesc[c(lapply(allDesc, is.null))]
allDesc[unlist(lapply(allDesc, is.null))]
mrcas[unlist(lapply(allDesc, is.null))]
rm(list=ls())
document()
document()
#this script will put addTaxa through some tests, and see if this new version#
#can successfully handle the old analysis you did for Austin#
#
#start the dev version of add taxa#
library(devtools)#
setwd("~/Documents/MyRCode/addTaxa")#
load_all()#
#
#load the tree and groupings files#
groupsDF <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/hak_groupings_all.csv")#
mast <- read.tree("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/mast.tre")#
namedClades <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/namedClades.csv")#
#
quickResults <- divRateSensitivity(mast, groupsDF, branch.position="midpoint",#
	ini.lambda=1, ini.mu=0.1, no.trees=3,#
	clade.membership=namedClades, crown.can.move=FALSE, calc.from.crown=TRUE, #
	epsilon=0.1)
quickResults
#this script will put addTaxa through some tests, and see if this new version#
#can successfully handle the old analysis you did for Austin#
#
#start the dev version of add taxa#
library(devtools)#
setwd("~/Documents/MyRCode/addTaxa")#
load_all()#
#
#load the tree and groupings files#
groupsDF <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/hak_groupings_all.csv")#
mast <- read.tree("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/mast.tre")#
namedClades <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/namedClades.csv")#
#
quickResults <- divRateSensitivity(mast, groupsDF, branch.position="midpoint",#
	ini.lambda=1, ini.mu=0.1, no.trees=10,#
	clade.membership=namedClades, crown.can.move=FALSE, calc.from.crown=FALSE, #
	epsilon=0)
quickResults
#this script will put addTaxa through some tests, and see if this new version#
#can successfully handle the old analysis you did for Austin#
#
#start the dev version of add taxa#
library(devtools)#
setwd("~/Documents/MyRCode/addTaxa")#
load_all()#
#
#load the tree and groupings files#
groupsDF <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/hak_groupings_all.csv")#
mast <- read.tree("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/mast.tre")#
namedClades <- read.csv("~/Documents/Work/PostDoc/HakeinaeProject/MillerEtAl/data/namedClades.csv")#
#
quickResults <- divRateSensitivity(mast, groupsDF, branch.position="midpoint",#
	ini.lambda=1, ini.mu=0.1, no.trees=5,#
	clade.membership=namedClades, crown.can.move=FALSE, calc.from.crown=TRUE, #
	epsilon=0)
quickResults
rm(list=ls())
ls()
document()
check()
?`:::`
?:::
ls()
document()
data(chelonia)
ls()
chelonia
str(chelonia)
chelonia$phy
chelonia$phy$tip.label
tree <- data(chelonia)$phy
tree <- chelonia$phy
tree
lapply(strsplit(tree$tip.label, "_"), length)
temp <- lapply(strsplit(tree$tip.label, "_"), length)
names(temp) <- tree$tip.label
temp[temp==2]
temp[temp==3]
temp <- lapply(strsplit(tree$tip.label, "_"), length)
temp <- temp[temp==2]
temp <- lapply(strsplit(tree$tip.label, "_"), length)
names(temp) <- tree$tip.label
temp <- temp[temp==2]
temp
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp))
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))
tree
tree <- chelonia$phy
tree
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))
tree
plot(tree,cex=0.2)
groupsDF <- data.frame(species=tree$tip.label)
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))
head(groupsDF)
example <- tipDropper(tree, groupsDF, 20)
example
document()
addTaxa
document()
document()
document()
document()
?getMRCAs
data(bird.families)#
#
#create a data frame of all taxa from the phylogeny, and make up clade memberships#
#for each. note that the names on this data frame differ from "groupings" in other#
#functions#
dummy.frame <- data.frame(species=bird.families$tip.label, #
clade=c(rep("nonPasserine", 95), rep("suboscine", 9), rep("basalOscine", 13), #
rep("oscine", 20)))#
#
#use the function#
getMRCAs(bird.families, dummy.frame)
document()
?addTaxa
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#add those missing species back in#
newTrees <- addTaxa(tree=tree, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
tree
dim(groupsDF)
head(groupsDF)
identifyMissing(tree, groupsDF)
document()
?addTaxa
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 20 species#
example <- tipDropper(tree, groupsDF, 20)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
newTrees
newTrees$trees[[1]]
plot(newTrees$trees[[1]])
plot(newTrees$trees[[1]], cex=0.2)
plot(ladderize(newTrees$trees[[1]]), cex=0.2)
quartz()
plot(ladderize(tree, cex=0.2)
plot(ladderize(tree), cex=0.2)
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 20 species#
example <- tipDropper(tree, groupsDF, 40)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
quartz()
plot(ladderize(newTrees$trees[[1]]), cex=0.2)
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 20 species#
example <- tipDropper(tree, groupsDF, 80)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
example
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 20 species#
example <- tipDropper(tree, groupsDF, 200)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 20 species#
example <- tipDropper(tree, groupsDF, 100)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
tree
example
plot(ladderize(newTrees$trees[[1]]), cex=0.2)
plot(ladderize(newTrees$trees[[1]]), cex=0.2)
plot(ladderize(tree), cex=0.2)
quartz()
plot(ladderize(newTrees$trees[[1]]), cex=0.2)
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 20 species#
example <- tipDropper(tree, groupsDF, 100)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="midpoint",#
  no.trees=1)
plot(ladderize(newTrees$trees[[1]]), cex=0.2)
document()
?addTaxa
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species#
example <- tipDropper(tree, groupsDF, 100)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
dist.topo(tree, newTrees[[1]][[1]])
dist.topo(tree, tree)
dist.topo(tree, tree, "score")
dist.topo(tree, newTrees[[1]][[1]], "score")
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species#
example <- tipDropper(tree, groupsDF, 100)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="uniform",#
  no.trees=1)
dist.topo(tree, newTrees[[1]][[1]], "score")
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species#
example <- tipDropper(tree, groupsDF, 3)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="uniform",#
  no.trees=1)
dist.topo(tree, newTrees[[1]][[1]], "score")
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species#
example <- tipDropper(tree, groupsDF, 3)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
dist.topo(tree, newTrees[[1]][[1]], "score")
cophyloplot(tree, newTrees[[1]][[1]])
cophylo(tree, newTrees[[1]][[1]])
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species#
example <- tipDropper(tree, groupsDF, 20)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
cophylo(tree, newTrees[[1]][[1]])->temp
temp
temp[[1]]
plot(temp)
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species#
example <- tipDropper(tree, groupsDF, 100)#
#
#add those missing species back in#
newTrees <- addTaxa(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=1)
cophylo(tree, newTrees[[1]][[1]])->temp
plot(temp)
rm(list=ls())
document
document()
?bdScaler
data(bird.families)#
#
bdScaler(bird.families, lambda=1, mu=0, min.age=0, max.age=10)
?findRates
data(bird.families)#
#
tree <- multi2di(bird.families)#
#
findRates(tree, 0.95)
document()
?identifyMissing
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#use the function to drop 100 species (that is over half the species)#
example <- tipDropper(tree, groupsDF, 100)#
#
#identify missing species#
identifyMissing(example, groupsDF)
?extractClade
data(bird.families)#
#
#define a named vector of node numbers, including a root#
temp <- c()#
temp[1] <- length(bird.families$tip.label) + 1#
names(temp) <- "root"#
#
#create a data frame of all taxa from the phylogeny, and make up clade memberships#
#for each. note that the names on this data frame differ from "groupings" in other#
#functions#
dummy.frame <- data.frame(species=bird.families$tip.label, #
clade=c(rep("nonPasserine", 95), rep("suboscine", 9), rep("basalOscine", 13), #
rep("oscine", 20)))#
#
#use the function getMRCAs() to determine the nodes subtending these named clades#
nodes <- getMRCAs(bird.families, dummy.frame)#
#unlist the results and append to the root node defined above#
nodes <- append(temp, nodes)#
#
#use the function. note the effect of including a root edge or not. also note that #
#because non-passerines are not monophyletic, the "subtree" corresponding to that#
#"clade" is the whole tree#
temp1 <- extractClade(bird.families, nodes)#
temp2 <- extractClade(bird.families, nodes, root.edge=1)#
plot(temp1$oscine, root.edge=TRUE)
plot(temp2$oscine, root.edge=TRUE)
?singleSpeciesTree
data(bird.families)#
#
#extract a single-species tree#
tree <- singleSpeciesTree(bird.families, "Rheidae")
tree
rm(list=ls())
?addTaxa
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))
plot(tree,cex=0.1)
plot(tree,cex=0.2)
document()
?divRates
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemys <- data.frame(species=tree$tip.label[grep("Graptemys", tree$tip.label)],#
  clade="graptemys")
graptemys
document()
?divRates
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemys <- data.frame(species=tree$tip.label[grep("Graptemys", tree$tip.label)],#
  clade="graptemys")#
gopherus <- data.frame(species=tree$tip.label[grep("Gopherus", tree$tip.label)],#
  clade="gopherus")#
cladesDF <- rbind(graptemys, gopherus)#
#
#drop species, add them back in and see how diversification rates of those clades#
#change#
example <- tipDropper(tree, groupsDF, 100)#
#
sensitivity <- divRates(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=10, clade.membership=cladesDF, crown.can.move=TRUE,#
  calc.from.crown=TRUE, epsilon=0.1)
document()
?divRates
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemys <- data.frame(species=tree$tip.label[grep("Graptemys", tree$tip.label)],#
  clade="graptemys")#
gopherus <- data.frame(species=tree$tip.label[grep("Gopherus", tree$tip.label)],#
  clade="gopherus")#
cladesDF <- rbind(graptemys, gopherus)#
#
#drop species, add them back in and see how diversification rates of those clades#
#change#
example <- tipDropper(tree, groupsDF, 10)#
#
sensitivity <- divRates(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=10, clade.membership=cladesDF, crown.can.move=TRUE,#
  calc.from.crown=TRUE, epsilon=0.1)
rm(list=ls())
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemys <- data.frame(species=tree$tip.label[grep("Graptemys", tree$tip.label)],#
  clade="graptemys")#
gopherus <- data.frame(species=tree$tip.label[grep("Gopherus", tree$tip.label)],#
  clade="gopherus")#
cladesDF <- rbind(graptemys, gopherus)#
#
#drop species, add them back in and see how diversification rates of those clades#
#change#
example <- tipDropper(tree, groupsDF, 10)#
#
sensitivity <- divRates(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=10, clade.membership=cladesDF, crown.can.move=TRUE,#
  calc.from.crown=TRUE, epsilon=0.1)
cladesDF
splitUp <- split(cladesDF, cladesDF$clade)
mono <- unlist(lapply(splitUp, function(x) is.monophyletic(tree, x$species)))
mono
write.tree(tree,"test.tre")
document()
?divRates
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemysEtc <- data.frame(#
  species=tree$tip.label[grep(c("Graptemys","Trachemys","Malaclemys"), tree$tip.label)],#
  clade="graptemys")#
gopherus <- data.frame(species=tree$tip.label[grep("Gopherus", tree$tip.label)],#
  clade="gopherus")#
cladesDF <- rbind(graptemys, gopherus)#
#
#drop species, add them back in and see how diversification rates of those clades#
#change#
example <- tipDropper(tree, groupsDF, 10)#
#
sensitivity <- divRates(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=10, clade.membership=cladesDF, crown.can.move=TRUE,#
  calc.from.crown=TRUE, epsilon=0.1)
cladesDF
tree$tip.label[grep(c("Graptemys","Trachemys","Malaclemys"), tree$tip.label)]
c("Graptemys","Trachemys","Malaclemys")
document()
?divRates
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemysEtc <- data.frame(#
  species=groupsDF$species[groupsDF$group %in% c("Graptemys","Trachemys","Malaclemys")],#
  clade="graptemys")#
gopherus <- data.frame(species=tree$tip.label[grep("Gopherus", tree$tip.label)],#
  clade="gopherus")#
cladesDF <- rbind(graptemys, gopherus)#
#
#drop species, add them back in and see how diversification rates of those clades#
#change#
example <- tipDropper(tree, groupsDF, 10)#
#
sensitivity <- divRates(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=10, clade.membership=cladesDF, crown.can.move=TRUE,#
  calc.from.crown=TRUE, epsilon=0.1)
cladesDF
groupsDF$species[groupsDF$group %in% c("Graptemys","Trachemys","Malaclemys")]
document()
rm(list=ls())
?divRates
data(chelonia)#
tree <- chelonia$phy#
#
#some species in this tree are identified to subspecies. drop those#
temp <- lapply(strsplit(tree$tip.label, "_"), length)#
names(temp) <- tree$tip.label#
temp <- temp[temp==2]#
tree <- drop.tip(tree, setdiff(tree$tip.label, names(temp)))#
#
#create an example groupings data frame.#
groupsDF <- data.frame(species=tree$tip.label)#
groupsDF$group <- unlist(lapply(strsplit(tree$tip.label, "_"), "[", 1))#
#
#and create a dummy data frame to pay attention to diversification rates#
#of two arbitrary clades#
graptemysEtc <- data.frame(#
  species=groupsDF$species[groupsDF$group %in% c("Graptemys","Trachemys","Malaclemys")],#
  clade="graptemys")#
gopherus <- data.frame(species=tree$tip.label[grep("Gopherus", tree$tip.label)],#
  clade="gopherus")#
cladesDF <- rbind(graptemysEtc, gopherus)#
#
#drop species, add them back in and see how diversification rates of those clades#
#change#
example <- tipDropper(tree, groupsDF, 10)#
#
sensitivity <- divRates(tree=example, groupings=groupsDF, branch.position="bd",#
  no.trees=10, clade.membership=cladesDF, crown.can.move=TRUE,#
  calc.from.crown=TRUE, epsilon=0.1)
cladesDF
example
example$tip.label
